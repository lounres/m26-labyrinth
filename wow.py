from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
from typing import Dict, List

user_id_user: Dict[str, int] = {}
user_user_id: Dict[int, str] = {}
user_sessions: Dict[int, Session] = {}  #user-session
sessions_user: Dict[Session, list] = {} # session-user
global kolvo_user
kolvo_user = 0
global kolvo_session
kolvo_session = 0

async def send_message_to_user(bot, user_id: int, text: str):
    await bot.send_message(chat_id=user_id, text=text)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"""
    user = update.effective_user
    user_id = user.id
    keyboard = [["‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏", "üÜï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é"]]
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üéÆ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )


async def delete_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    user_id = user.id

    session = user_sessions[user_id]
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    session_users = sessions_user(session)
    for player_number in session_users:
        await send_message_to_user(
            context.bot,
            user_id[player_number],
            f"üö™ –ò–≥—Ä–æ–∫ {user.first_name} –∑–∞–≤–µ—Ä—à–∏–ª —Å–µ—Å—Å–∏—é {session}"
        )

        # –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é
    for player_number in session_users:
        del user_id_user[user_user_id[player_number]]
        del user_user_id[player_number]
        del sessions_user[session]
        del user_sessions[player_number]

    await update.message.reply_text(
        f"‚úÖ –°–µ—Å—Å–∏—è {session} —É–¥–∞–ª–µ–Ω–∞!",
        reply_markup=ReplyKeyboardRemove()
    )

async def show_game_interface(update: Update, session: Session, user_id: int):
    player_number = session.get_player_number()
    commands1 = session.get_available_commands1()
    commands2 = session.get_available_commands2()
    commands3 = session.get_available_commands3()
    keyboard1 = [commands1[i:i + 2] for i in range(0, len(commands1), 2)]
    keyboard2 = [commands2[i:i + 2] for i in range(0, len(commands2), 2)]
    keyboard3 = [commands3[i:i + 2] for i in range(0, len(commands3), 2)]

    status_text = f"–°–µ—Å—Å–∏—è {session.session_id}\n"
    status_text += f"–ò–≥—Ä–æ–∫–æ–≤: {len(session.players)}\n"
    status_text += f"–í–∞—à –Ω–æ–º–µ—Ä: {player_number}\n\n"
    status_text += "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:"

    await update.message.reply_text(
        status_text,
        reply_markup=ReplyKeyboardMarkup(keyboard1, resize_keyboard=True)
    )
    status_text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
    await update.message.reply_text(
        status_text,
        reply_markup=ReplyKeyboardMarkup(keyboard2, resize_keyboard=True)
    )
    status_text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
    await update.message.reply_text(
        status_text,
        reply_markup=ReplyKeyboardMarkup(keyboard3, resize_keyboard=True)
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    user_id = user.id
    text = update.message.text

    if text == "‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ ID —Å–µ—Å—Å–∏–∏:",
            reply_markup=ReplyKeyboardRemove()
        )
        context.user_data['awaiting_session_join'] = True

    elif text == "üÜï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é":

        session_id = kolvo_session
        kolvo_session+= 1

        new_session = Session(session_id)

        player_number = kolvo_user
        kolvo_user += 1
        new_session.add_new_player(player_number)#ask position
        user_sessions[player_number] = new_session
        sessions_user[new_session].append(player_number)
        user_user_id[player_number] = user_id
        user_id_user[user_id] = player_number

        await update.message.reply_text(
            f"üéâ –°–µ—Å—Å–∏—è {session_id} —Å–æ–∑–¥–∞–Ω–∞!\n"
            f"–í–∞—à –Ω–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞: {player_number}\n"
            f"ID —Å–µ—Å—Å–∏–∏: {session_id}",
            reply_markup=ReplyKeyboardRemove()
        )
        await show_game_interface(update, new_session, user_id)

    elif context.user_data.get('awaiting_session_join'):
        session = int(text)
        player_number = kolvo_user
        kolvo_user += 1
        session.add_new_player(player_number)
        user_sessions[player_number] = session
        sessions_user[session].append(player_number)
        user_user_id[player_number] = user_id
        user_id_user[user_id] = player_number

        await update.message.reply_text(
            f"‚úÖ –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–µ—Å—Å–∏–∏ {session}!\n"
            f"–í–∞—à –Ω–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞: {player_number}",
            reply_markup=ReplyKeyboardRemove()
        )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –æ –Ω–æ–≤–æ–º –∏–≥—Ä–æ–∫–µ
        session_users = sessions_user[session]
        for session_user_id in session_users:
            if session_user_id != user_id:
                await send_message_to_user(
                context.bot,
                session_user_id,
                    f"üéÆ –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ {player_number} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Å—Å–∏–∏!"
                )

        await show_game_interface(update, session, user_id)
        context.user_data['awaiting_session_join'] = False

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        session = user_sessions[user_id]
        player_number = user_id_user[user_id]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ session –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        result_text = session.process_command(player_number, text)

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        session_users = sessions_user[session]
        for session_user_id in session_users:
            await send_message_to_user(context.bot, session_user_id, result_text)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        await show_game_interface(update, session, user_id)


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    BOT_TOKEN = "YOUR_BOT_TOKEN"

    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("delete", delete_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_polling()


main()

